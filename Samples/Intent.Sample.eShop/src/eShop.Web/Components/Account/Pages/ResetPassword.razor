@page "/Account/ResetPassword"
@using System.ComponentModel.DataAnnotations
@using System.Text
@using eShop.Web.Common
@using Microsoft.AspNetCore.Identity
@using Microsoft.AspNetCore.WebUtilities
@inject IAuthService AuthService
@inject IdentityRedirectManager RedirectManager
@attribute [Intent.Skip("/h1", "/hr", "/div[@class='row']")]

<PageTitle>Reset password</PageTitle>

<section class="form-container">
    <h2>Reset your password</h2>

    <EditForm Model="Input"
              FormName="reset-password"
              OnValidSubmit="OnValidSubmitAsync"
              method="post">
        <DataAnnotationsValidator />
        <ValidationSummary class="form-validation-summary" role="alert" />

        <div class="form-group">
            <label for="email">Email</label>
            <InputText id="email"
                       class="form-control"
                       @bind-Value="Input.Email"
                       autocomplete="username"
                       aria-required="true"
                       placeholder="name@example.com" />
            <ValidationMessage For="() => Input.Email" class="form-error" />
        </div>

        <div class="form-group">
            <label for="password">Password</label>
            <InputText id="password"
                       class="form-control"
                       type="password"
                       @bind-Value="Input.Password"
                       autocomplete="new-password"
                       aria-required="true"
                       placeholder="Enter your new password" />
            <ValidationMessage For="() => Input.Password" class="form-error" />
        </div>

        <div class="form-group">
            <label for="confirm-password">Confirm Password</label>
            <InputText id="confirm-password"
                       class="form-control"
                       type="password"
                       @bind-Value="Input.ConfirmPassword"
                       autocomplete="new-password"
                       aria-required="true"
                       placeholder="Confirm your new password" />
            <ValidationMessage For="() => Input.ConfirmPassword" class="form-error" />
        </div>

        <button type="submit" class="btn-primary" style="background-color:black; color:white">Reset Password</button>
    </EditForm>
</section>

@code {

    private IEnumerable<IdentityError>? identityErrors;
    [SupplyParameterFromForm]
    private InputModel Input { get; set; } = new();
    [SupplyParameterFromQuery]
    private string? Code { get; set; }
    private string? Message => identityErrors is null ? null : $"Error: {string.Join(", ", identityErrors.Select(error => error.Description))}";

    protected override void OnInitialized()
    {
        if (Code is null)
        {
            RedirectManager.RedirectTo("Account/ResetPasswordConfirmation");
        }
        Input.Code = Encoding.UTF8.GetString(WebEncoders.Base64UrlDecode(Code));
    }

    private async Task OnValidSubmitAsync()
    {
        await AuthService.ResetPassword(Input.Email, Input.Code, Input.Password);
    }

    private sealed class InputModel
    {
        [Required]
        [EmailAddress]
        public string Email { get; set; } = "";
        [Required]
        [StringLength(100, ErrorMessage = "The {0} must be at least {2} and at max {1} characters long.", MinimumLength = 6)]
        [DataType(DataType.Password)]
        public string Password { get; set; } = "";
        [DataType(DataType.Password)]
        [Display(Name = "Confirm password")]
        [Compare("Password", ErrorMessage = "The password and confirmation password do not match.")]
        public string ConfirmPassword { get; set; } = "";
        [Required]
        public string Code { get; set; } = "";
    }
}
